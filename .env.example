# ---------- Global ----------
ENVIRONMENT=dev
SERVICE_LOG_LEVEL=INFO
REQUEST_LOG_SAMPLE_RATE=1.0

# ---------- Auth ----------
AUTH_DISABLED=true

# ---------- Performance Budgets (ms) ----------
PERF_ASK_P95_MS=3000
PERF_QUERY_P95_MS=4500

# ---------- Arango ----------

# ------------------------------------------------------------------
#  NOTE:
#  * Inside docker‑compose the hostname ‘arangodb’ resolves automatically.
#  * When you run any service directly on the host you must point the URL at
#    your host‑exposed port instead, e.g.:
#        export ARANGO_URL=http://localhost:8529
#    or use the new CLI flag:
#        python -m ingest.cli --arango-url http://localhost:8529 seed …
# ------------------------------------------------------------------
ARANGO_URL=http://arangodb:8529
ARANGO_DB=batvault
ARANGO_ROOT_USER=root
ARANGO_ROOT_PASSWORD=batvault

# Vector index
ARANGO_VECTOR_INDEX_ENABLED=true
EMBEDDING_DIM=768               # spec-compliant dim
VECTOR_METRIC=cosine
# FAISS/IVF setting for Arango 3.12.4 experimental vector indexes:
FAISS_NLISTS=100
# If I ever enable auth, I can set:
# ARANGO_USERNAME=root
# ARANGO_PASSWORD=batvault

# ---------- Redis ----------
REDIS_URL=redis://redis:6379/0

# ---------- Cache TTLs ----------
CACHE_TTL_RESOLVER=300         # 5 min
CACHE_TTL_EVIDENCE=900         # 15 min
CACHE_TTL_LLM_JSON=120         # 2 min
CACHE_TTL_EXPAND=60            # 1 min

# ---------- Evidence size budgets ----------
MAX_PROMPT_BYTES=8192
SELECTOR_TRUNCATION_THRESHOLD=6144
MIN_EVIDENCE_ITEMS=1

# ---------- Feature flags ----------
ENABLE_SELECTOR_MODEL=true
ENABLE_LOAD_SHEDDING=true
ENABLE_GRAPH_EMBEDDINGS=false #future extension in the roadmap
ENABLE_ARTIFACT_RETENTION=true
ENABLE_CACHING=true

# ---------- MinIO ----------
MINIO_ENDPOINT=minio:9000
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin
MINIO_BUCKET=batvault-artifacts
MINIO_REGION=us-east-1
MINIO_RETENTION_DAYS=14
MINIO_SECURE=false

# ---------- LLM ----------
# off|on
LLM_MODE=on

# (Optional but recommended) make the router use the same base as gateway settings
# so function-calls hit the right port.
MEMORY_API_BASE=http://memory_api:8000

# LLM model configuration. Override these values to change the models
# used by the optional language and embedding services. If you do not
# wish to run LLM services, leave `LLM_MODE=off` and these values will
# have no effect.
VLLM_MODEL_NAME=Qwen/Qwen2-7B-Instruct
TGI_MODEL_ID=Qwen/Qwen2-7B-Instruct
TGI_CANARY_MODEL_ID=Qwen/Qwen2-7B-Instruct
TEI_MODEL_NAME=BAAI/bge-base-en-v1.5
OPENAI_DISABLED=0
ENABLE_EMBEDDINGS=true
HF_TOKEN=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
EMBEDDINGS_ENDPOINT=http://tei-embed:8085
EMBEDDINGS_DIMS=768
# ---------- LLM Endpoints ----------
CANARY_MODEL_ENDPOINT=http://tgi-canary:8090
CONTROL_MODEL_ENDPOINT=http://vllm-control:8010

# ---------- LLM (central, used by gateway) ----------
# Canary rollout + JSON-only generation settings
CANARY_PCT=10
CANARY_HEADER_OVERRIDE=x-batvault-canary
LLM_TEMPERATURE=0.0
LLM_MAX_TOKENS=512
# vLLM guardrails (VRAM/throughput caps)
VLLM_MAX_MODEL_LEN=2048
VLLM_MAX_NUM_SEQS=1
VLLM_MAX_BATCHED_TOKENS=2048
VLLM_SWAP_GB=0
VLLM_GPU_UTIL=0.60
# Validator: supporting_ids must be within allowed_ids
CITE_ALL_IDS=true

# ---------- Gate Budgeting (deterministic) ----------
# Completion shrink loop knobs (see packages/core_config/constants.py)
GATE_COMPLETION_SHRINK_FACTOR=0.8
GATE_SHRINK_JITTER_PCT=0.15
GATE_MAX_SHRINK_RETRIES=2

# ---------- Internal Service URLs ----------
# Explicit for all services (gateway uses this to call memory_api)
MEMORY_API_URL=http://memory_api:8000

# ---------- API rate-limiting ----------
API_RATE_LIMIT_DEFAULT=100/minute   # A-1 – default token-bucket

# ---------- Observability ----------
# Services send telemetry to the local OpenTelemetry Collector in docker-compose
OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317

# ---------- CORS ----------
# Allow the development frontend to call the API Edge without cross-origin errors. The
# comma-separated list includes the default localhost:3000 and the new dev frontend
# running at :5173.  Additional origins can be added via environment override.
CORS_ALLOW_ORIGINS=http://localhost:3000,http://localhost:5173
VITE_API_BASE=http://localhost:8080
